# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: [main, beta]
  pull_request:
    branches: [main, beta, dev]

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macos-latest,   r: 'release'}
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-20.04, r: 'release', rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v3
      
      - uses: r-lib/actions/setup-tinytex@v2

      - uses: r-lib/actions/setup-pandoc@v2

      
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true
      
      - name: Install rJava Ubuntu
        if: runner.os == 'Linux'
        run: |
          sudo apt-get install r-cran-rjava
          
      - name: Install rJava Windows and MacOS
        if: runner.os == 'Windows' || runner.os == "macOS"
        run: |
          install.packages("rJava", repos = "https://cloud.r-project.org/", type = "source")
        
      - name: Install Suggests
        run: |
            install.packages("knitr", repos = "https://cloud.r-project.org/")
            install.packages("rmarkdown", repos = "https://cloud.r-project.org/")
            install.packages("tibble", repos = "https://cloud.r-project.org/")
            install.packages("testthat", repos = "https://cloud.r-project.org/")
            install.packages("usethis", repos = "https://cloud.r-project.org/")
        shell: Rscript {0}
        
        
      - name: Install CirceR
        run: |
            install.packages("RJSONIO", repos = "https://cloud.r-project.org/")
            install.packages("CirceR", repos = "https://OHDSI.github.io/drat", type = "source")
        shell: Rscript {0}
      
      - name: Install Eunomia
        run: |
            install.packages("SqlRender", repos = "https://cloud.r-project.org/")
            install.packages("RSQLite", repos = "https://cloud.r-project.org/")
            install.packages("readr", repos = "https://cloud.r-project.org/")
            install.packages("urltools", repos = "https://cloud.r-project.org/")
            install.packages("dbplyr", repos = "https://cloud.r-project.org/")
            install.packages("Eunomia", repos = "https://OHDSI.github.io/drat", type = "source")
        shell: Rscript {0}

      - name: Install CohortGenerator
        run: |
            install.packages("checkmate", repos = "https://cloud.r-project.org/")
            install.packages("digest", repos = "https://cloud.r-project.org/")
            install.packages("dplyr", repos = "https://cloud.r-project.org/")
            install.packages("lubridate", repos = "https://cloud.r-project.org/")
            install.packages("ParallelLogger", repos = "https://cloud.r-project.org/")
            install.packages("readr", repos = "https://cloud.r-project.org/")
            install.packages("rlang", repos = "https://cloud.r-project.org/")
            install.packages("RJSONIO", repos = "https://cloud.r-project.org/")
            install.packages("jsonlite", repos = "https://cloud.r-project.org/")
            install.packages("SqlRender", repos = "https://cloud.r-project.org/")
            install.packages("stringi", repos = "https://cloud.r-project.org/")

            install.packages("CohortGenerator", repos = "https://OHDSI.github.io/drat", type = "source")
        shell: Rscript {0}

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          dependencies: '"hard"'
          extra-packages: any::rcmdcheck
          needs: check

      - uses: r-lib/actions/check-r-package@v2
        with:
          upload-snapshots: true
