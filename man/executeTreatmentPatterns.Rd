% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/executeTreatmentPatterns.R
\name{executeTreatmentPatterns}
\alias{executeTreatmentPatterns}
\title{executeTreatmentPatterns}
\usage{
executeTreatmentPatterns(
  cohorts,
  cohortTableName,
  outputPath,
  cdm = NULL,
  connectionDetails = NULL,
  cdmSchema = NULL,
  resultSchema = NULL,
  includeTreatments = "startDate",
  periodPriorToIndex = 0,
  minEraDuration = 0,
  splitEventCohorts = "",
  splitTime = 30,
  eraCollapseSize = 30,
  combinationWindow = 30,
  minPostCombinationDuration = 30,
  filterTreatments = "First",
  maxPathLength = 5,
  minFreq = 5,
  addNoPaths = TRUE
)
}
\arguments{
\item{cohorts}{(\code{data.frame()})\cr
Data frame containing the following columns and data types:
\describe{
\item{cohortId \code{numeric(1)}}{Cohort ID's of the cohorts to be used in the cohort table.}
\item{cohortName \code{character(1)}}{Cohort names of the cohorts to be used in the cohort table.}
\item{type \code{character(1)} ["target", "event', "exit"]}{Cohort type, describing if the cohort is a target, event, or exit cohort}
}}

\item{cohortTableName}{(\code{character(1)})\cr
Cohort table name.}

\item{outputPath}{(\code{character(1)})\cr}

\item{cdm}{(\code{CDMConnector::cdm_from_con()}: \code{NULL})\cr
Optional; Ignores \code{connectionDetails}, \code{cdmSchema}, and \code{resultSchema}.}

\item{connectionDetails}{(\code{DatabaseConnector::createConnectionDetails()}: \code{NULL})\cr
Optional; In congruence with \code{cdmSchema} and \code{resultSchema}. Ignores \code{cdm}.}

\item{cdmSchema}{(\code{character(1)}: \code{NULL})\cr
Optional; In congruence with \code{connectionDetails} and \code{resultSchema}. Ignores \code{cdm}.}

\item{resultSchema}{(\code{character(1)}: \code{NULL})\cr
Optional; In congruence with \code{connectionDetails} and \code{cdmSchema}. Ignores \code{cdm}.}

\item{includeTreatments}{(\code{character(1)}: \code{"startDate"})\cr}

\item{periodPriorToIndex}{(\code{integer(1)}: \code{0})\cr
Number of days prior to the index date of the target cohort | that event
cohorts are allowed to start}

\item{minEraDuration}{(\code{integer(1)}: \code{0})\cr
Minimum time an event era should last to be included in analysis}

\item{splitEventCohorts}{(\code{character(n)}: \code{""})\cr
Specify event cohort to split in acute (< X days) and therapy (>= X days)}

\item{splitTime}{(\code{integer(1)}: \code{30})\cr
Specify number of days (X) at which each of the split event cohorts should
be split in acute and therapy}

\item{eraCollapseSize}{(\code{integer(1)}: \code{30})\cr
Window of time between which two eras of the same event cohort are collapsed
into one era}

\item{combinationWindow}{(\code{integer(1)}: \code{30})\cr
Window of time two event cohorts need to overlap to be considered a
combination treatment}

\item{minPostCombinationDuration}{(\code{integer(1)}: \code{30})\cr
Minimum time an event era before or after a generated combination treatment
should last to be included in analysis}

\item{filterTreatments}{(\code{character(1)}: \code{"First"} ["first", "Changes", "all"])\cr
Select first occurrence of (‘First’); changes between (‘Changes’); or all
event cohorts (‘All’).}

\item{maxPathLength}{(\code{integer(1)}: \code{5})\cr
Maximum number of steps included in treatment pathway}

\item{minFreq}{(\code{integer(1)}: \code{5})\cr
Minimum frequency required per pathway. Censors data below \code{x} as \verb{<x}. This
minimum value will carry over to the sankey diagram and sunburst plot.}

\item{addNoPaths}{(\code{logical(1)}: \code{TRUE})\cr
Select to include untreated persons without treatment pathway in the
sunburst plot}
}
\value{
(\code{invisible(NULL)})
}
\description{
Compute treatment patterns according to the specified parameters within
specified cohorts. For more customization, or investigation of patient level
outcomes, you can run \link[TreatmentPatterns]{computePathways} and
\link[TreatmentPatterns]{export} separately.
}
\examples{
if (FALSE) {
  # Using CDMConnector
  
  con <- DBI::dbConnect(duckdb::duckdb(), dbdir = eunomia_dir())
  cdm <- cdm_from_con(con, cdm_schema = "main")
  
  # <Code to compute cohorts into Cohort Table>
  
  cohortTableName <- "CohortTable"
  
  cohorts <- data.frame(
    cohortId = c(1, 2, 3, 4, 5),
    cohortName = c("ViralSinusitis", "Acetaminophen", "Aspirin", "Clavulanate", "Death"),
    type = c("target", "event", "event", "event", "exit")
  )
  
  outputPath <- "./output/"
  
  executeTreatmentPatterns(
    cohorts,
    cohortTableName,
    outputPath,
    cdm
   )
  
  # Using DatabaseConnector
  
  connectionDetails <- Eunomia::getEunomiaConnectionDetails()
  cdmSchema <- "main"
  resultSchema <- "main"
  
  executeTreatmentPatterns(
    cohorts,
    cohortTableName,
    outputPath,
    connectionDetails,
    cdmSchema,
    resultSchema
   )
}
}
